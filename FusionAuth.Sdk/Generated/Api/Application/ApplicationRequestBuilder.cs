// <auto-generated/>
#pragma warning disable CS0618
using FusionAuth.Sdk.Api.Application.Item;
using FusionAuth.Sdk.Api.Application.Search;
using FusionAuth.Sdk.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace FusionAuth.Sdk.Api.Application
{
    /// <summary>
    /// Builds and executes requests for operations under \api\application
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApplicationRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The search property</summary>
        public global::FusionAuth.Sdk.Api.Application.Search.SearchRequestBuilder Search
        {
            get => new global::FusionAuth.Sdk.Api.Application.Search.SearchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the FusionAuth.Sdk.api.application.item collection</summary>
        /// <param name="position">The Id to use for the application. If not provided a secure random UUID will be generated.</param>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Api.Application.Item.WithApplicationItemRequestBuilder"/></returns>
        public global::FusionAuth.Sdk.Api.Application.Item.WithApplicationItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("applicationId", position);
                return new global::FusionAuth.Sdk.Api.Application.Item.WithApplicationItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApplicationRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/application{?inactive*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApplicationRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/application{?inactive*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves all the applications that are currently inactive. OR Retrieves the application for the given Id or all the applications if the Id is null.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.ApplicationResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::FusionAuth.Sdk.Models.ApplicationResponse?> GetAsync(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder.ApplicationRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::FusionAuth.Sdk.Models.ApplicationResponse> GetAsync(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder.ApplicationRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            return await RequestAdapter.SendAsync<global::FusionAuth.Sdk.Models.ApplicationResponse>(requestInfo, global::FusionAuth.Sdk.Models.ApplicationResponse.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates an application. You can optionally specify an Id for the application, if not provided one will be generated.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.ApplicationResponse"/></returns>
        /// <param name="body">The Application API request object.</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::FusionAuth.Sdk.Models.Errors">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::FusionAuth.Sdk.Models.ApplicationResponse?> PostAsync(global::FusionAuth.Sdk.Models.ApplicationRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::FusionAuth.Sdk.Models.ApplicationResponse> PostAsync(global::FusionAuth.Sdk.Models.ApplicationRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::FusionAuth.Sdk.Models.Errors.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::FusionAuth.Sdk.Models.ApplicationResponse>(requestInfo, global::FusionAuth.Sdk.Models.ApplicationResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves all the applications that are currently inactive. OR Retrieves the application for the given Id or all the applications if the Id is null.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder.ApplicationRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder.ApplicationRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Creates an application. You can optionally specify an Id for the application, if not provided one will be generated.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The Application API request object.</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::FusionAuth.Sdk.Models.ApplicationRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::FusionAuth.Sdk.Models.ApplicationRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder WithUrl(string rawUrl)
        {
            return new global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves all the applications that are currently inactive. OR Retrieves the application for the given Id or all the applications if the Id is null.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ApplicationRequestBuilderGetQueryParameters 
        {
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("inactive")]
            public string? Inactive { get; set; }
#nullable restore
#else
            [QueryParameter("inactive")]
            public string Inactive { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ApplicationRequestBuilderGetRequestConfiguration : RequestConfiguration<global::FusionAuth.Sdk.Api.Application.ApplicationRequestBuilder.ApplicationRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ApplicationRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
