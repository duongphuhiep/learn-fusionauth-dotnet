// <auto-generated/>
#pragma warning disable CS0618
using FusionAuth.Sdk.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace FusionAuth.Sdk.Api.Logout
{
    /// <summary>
    /// Builds and executes requests for operations under \api\logout
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class LogoutRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public LogoutRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/logout{?global*,refreshToken*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public LogoutRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/logout{?global*,refreshToken*}", rawUrl)
        {
        }
        /// <summary>
        /// The Logout API is intended to be used to remove the refresh token and access token cookies if they exist on the client and revoke the refresh token stored. This API takes the refresh token in the JSON body. OR The Logout API is intended to be used to remove the refresh token and access token cookies if they exist on the client and revoke the refresh token stored. This API does nothing if the request does not contain an access token or refresh token cookies.
        /// </summary>
        /// <returns>A <see cref="Stream"/></returns>
        /// <param name="body">Request for the Logout API that can be used as an alternative to URL parameters.</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Stream?> PostAsync(global::FusionAuth.Sdk.Models.LogoutRequest body, Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder.LogoutRequestBuilderPostQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Stream> PostAsync(global::FusionAuth.Sdk.Models.LogoutRequest body, Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder.LogoutRequestBuilderPostQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            return await RequestAdapter.SendPrimitiveAsync<Stream>(requestInfo, default, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The Logout API is intended to be used to remove the refresh token and access token cookies if they exist on the client and revoke the refresh token stored. This API takes the refresh token in the JSON body. OR The Logout API is intended to be used to remove the refresh token and access token cookies if they exist on the client and revoke the refresh token stored. This API does nothing if the request does not contain an access token or refresh token cookies.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">Request for the Logout API that can be used as an alternative to URL parameters.</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::FusionAuth.Sdk.Models.LogoutRequest body, Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder.LogoutRequestBuilderPostQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::FusionAuth.Sdk.Models.LogoutRequest body, Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder.LogoutRequestBuilderPostQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder WithUrl(string rawUrl)
        {
            return new global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// The Logout API is intended to be used to remove the refresh token and access token cookies if they exist on the client and revoke the refresh token stored. This API takes the refresh token in the JSON body. OR The Logout API is intended to be used to remove the refresh token and access token cookies if they exist on the client and revoke the refresh token stored. This API does nothing if the request does not contain an access token or refresh token cookies.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class LogoutRequestBuilderPostQueryParameters 
        {
            /// <summary>When this value is set to true all the refresh tokens issued to the owner of the provided token will be revoked.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("global")]
            public string? Global { get; set; }
#nullable restore
#else
            [QueryParameter("global")]
            public string Global { get; set; }
#endif
            /// <summary>The refresh_token as a request parameter instead of coming in via a cookie. If provided this takes precedence over the cookie.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("refreshToken")]
            public string? RefreshToken { get; set; }
#nullable restore
#else
            [QueryParameter("refreshToken")]
            public string RefreshToken { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class LogoutRequestBuilderPostRequestConfiguration : RequestConfiguration<global::FusionAuth.Sdk.Api.Logout.LogoutRequestBuilder.LogoutRequestBuilderPostQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
