// <auto-generated/>
#pragma warning disable CS0618
using FusionAuth.Sdk.Api.User.ActionNamespace;
using FusionAuth.Sdk.Api.User.Bulk;
using FusionAuth.Sdk.Api.User.ChangePassword;
using FusionAuth.Sdk.Api.User.Comment;
using FusionAuth.Sdk.Api.User.Consent;
using FusionAuth.Sdk.Api.User.Family;
using FusionAuth.Sdk.Api.User.ForgotPassword;
using FusionAuth.Sdk.Api.User.Import;
using FusionAuth.Sdk.Api.User.Item;
using FusionAuth.Sdk.Api.User.RecentLogin;
using FusionAuth.Sdk.Api.User.RefreshToken;
using FusionAuth.Sdk.Api.User.Registration;
using FusionAuth.Sdk.Api.User.Search;
using FusionAuth.Sdk.Api.User.TwoFactor;
using FusionAuth.Sdk.Api.User.VerifyEmail;
using FusionAuth.Sdk.Api.User.VerifyRegistration;
using FusionAuth.Sdk.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace FusionAuth.Sdk.Api.User
{
    /// <summary>
    /// Builds and executes requests for operations under \api\user
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UserRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The action property</summary>
        public global::FusionAuth.Sdk.Api.User.ActionNamespace.ActionRequestBuilder Action
        {
            get => new global::FusionAuth.Sdk.Api.User.ActionNamespace.ActionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The bulk property</summary>
        public global::FusionAuth.Sdk.Api.User.Bulk.BulkRequestBuilder Bulk
        {
            get => new global::FusionAuth.Sdk.Api.User.Bulk.BulkRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The changePassword property</summary>
        public global::FusionAuth.Sdk.Api.User.ChangePassword.ChangePasswordRequestBuilder ChangePassword
        {
            get => new global::FusionAuth.Sdk.Api.User.ChangePassword.ChangePasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The comment property</summary>
        public global::FusionAuth.Sdk.Api.User.Comment.CommentRequestBuilder Comment
        {
            get => new global::FusionAuth.Sdk.Api.User.Comment.CommentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The consent property</summary>
        public global::FusionAuth.Sdk.Api.User.Consent.ConsentRequestBuilder Consent
        {
            get => new global::FusionAuth.Sdk.Api.User.Consent.ConsentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The family property</summary>
        public global::FusionAuth.Sdk.Api.User.Family.FamilyRequestBuilder Family
        {
            get => new global::FusionAuth.Sdk.Api.User.Family.FamilyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The forgotPassword property</summary>
        public global::FusionAuth.Sdk.Api.User.ForgotPassword.ForgotPasswordRequestBuilder ForgotPassword
        {
            get => new global::FusionAuth.Sdk.Api.User.ForgotPassword.ForgotPasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The import property</summary>
        public global::FusionAuth.Sdk.Api.User.Import.ImportRequestBuilder Import
        {
            get => new global::FusionAuth.Sdk.Api.User.Import.ImportRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The recentLogin property</summary>
        public global::FusionAuth.Sdk.Api.User.RecentLogin.RecentLoginRequestBuilder RecentLogin
        {
            get => new global::FusionAuth.Sdk.Api.User.RecentLogin.RecentLoginRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The refreshToken property</summary>
        public global::FusionAuth.Sdk.Api.User.RefreshToken.RefreshTokenRequestBuilder RefreshToken
        {
            get => new global::FusionAuth.Sdk.Api.User.RefreshToken.RefreshTokenRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The registration property</summary>
        public global::FusionAuth.Sdk.Api.User.Registration.RegistrationRequestBuilder Registration
        {
            get => new global::FusionAuth.Sdk.Api.User.Registration.RegistrationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The search property</summary>
        public global::FusionAuth.Sdk.Api.User.Search.SearchRequestBuilder Search
        {
            get => new global::FusionAuth.Sdk.Api.User.Search.SearchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The twoFactor property</summary>
        public global::FusionAuth.Sdk.Api.User.TwoFactor.TwoFactorRequestBuilder TwoFactor
        {
            get => new global::FusionAuth.Sdk.Api.User.TwoFactor.TwoFactorRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The verifyEmail property</summary>
        public global::FusionAuth.Sdk.Api.User.VerifyEmail.VerifyEmailRequestBuilder VerifyEmail
        {
            get => new global::FusionAuth.Sdk.Api.User.VerifyEmail.VerifyEmailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The verifyRegistration property</summary>
        public global::FusionAuth.Sdk.Api.User.VerifyRegistration.VerifyRegistrationRequestBuilder VerifyRegistration
        {
            get => new global::FusionAuth.Sdk.Api.User.VerifyRegistration.VerifyRegistrationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the FusionAuth.Sdk.api.user.item collection</summary>
        /// <param name="position">The Id for the user. If not provided a secure random UUID will be generated.</param>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Api.User.Item.WithUserItemRequestBuilder"/></returns>
        public global::FusionAuth.Sdk.Api.User.Item.WithUserItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("userId", position);
                return new global::FusionAuth.Sdk.Api.User.Item.WithUserItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.User.UserRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/user{?changePasswordId*,email*,loginId*,loginIdTypes*,username*,verificationId*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.User.UserRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/user{?changePasswordId*,email*,loginId*,loginIdTypes*,username*,verificationId*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves the user for the given Id. This method does not use an API key, instead it uses a JSON Web Token (JWT) for authentication. OR Retrieves the user by a verificationId. The intended use of this API is to retrieve a user after the forgot password workflow has been initiated and you may not know the user&apos;s email or username. OR Retrieves the user for the given username. OR Retrieves the user for the loginId, using specific loginIdTypes. OR Retrieves the user for the loginId. The loginId can be either the username or the email. OR Retrieves the user for the given email. OR Retrieves the user by a change password Id. The intended use of this API is to retrieve a user after the forgot password workflow has been initiated and you may not know the user&apos;s email or username.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.UserResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::FusionAuth.Sdk.Models.Errors">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::FusionAuth.Sdk.Models.UserResponse?> GetAsync(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.User.UserRequestBuilder.UserRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::FusionAuth.Sdk.Models.UserResponse> GetAsync(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.User.UserRequestBuilder.UserRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::FusionAuth.Sdk.Models.Errors.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::FusionAuth.Sdk.Models.UserResponse>(requestInfo, global::FusionAuth.Sdk.Models.UserResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Creates a user. You can optionally specify an Id for the user, if not provided one will be generated.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.UserResponse"/></returns>
        /// <param name="body">User API request object.</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::FusionAuth.Sdk.Models.Errors">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::FusionAuth.Sdk.Models.UserResponse?> PostAsync(global::FusionAuth.Sdk.Models.UserRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::FusionAuth.Sdk.Models.UserResponse> PostAsync(global::FusionAuth.Sdk.Models.UserRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPostRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::FusionAuth.Sdk.Models.Errors.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::FusionAuth.Sdk.Models.UserResponse>(requestInfo, global::FusionAuth.Sdk.Models.UserResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves the user for the given Id. This method does not use an API key, instead it uses a JSON Web Token (JWT) for authentication. OR Retrieves the user by a verificationId. The intended use of this API is to retrieve a user after the forgot password workflow has been initiated and you may not know the user&apos;s email or username. OR Retrieves the user for the given username. OR Retrieves the user for the loginId, using specific loginIdTypes. OR Retrieves the user for the loginId. The loginId can be either the username or the email. OR Retrieves the user for the given email. OR Retrieves the user by a change password Id. The intended use of this API is to retrieve a user after the forgot password workflow has been initiated and you may not know the user&apos;s email or username.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.User.UserRequestBuilder.UserRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.User.UserRequestBuilder.UserRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Creates a user. You can optionally specify an Id for the user, if not provided one will be generated.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">User API request object.</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPostRequestInformation(global::FusionAuth.Sdk.Models.UserRequest body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPostRequestInformation(global::FusionAuth.Sdk.Models.UserRequest body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.POST, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Api.User.UserRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::FusionAuth.Sdk.Api.User.UserRequestBuilder WithUrl(string rawUrl)
        {
            return new global::FusionAuth.Sdk.Api.User.UserRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves the user for the given Id. This method does not use an API key, instead it uses a JSON Web Token (JWT) for authentication. OR Retrieves the user by a verificationId. The intended use of this API is to retrieve a user after the forgot password workflow has been initiated and you may not know the user&apos;s email or username. OR Retrieves the user for the given username. OR Retrieves the user for the loginId, using specific loginIdTypes. OR Retrieves the user for the loginId. The loginId can be either the username or the email. OR Retrieves the user for the given email. OR Retrieves the user by a change password Id. The intended use of this API is to retrieve a user after the forgot password workflow has been initiated and you may not know the user&apos;s email or username.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UserRequestBuilderGetQueryParameters 
        {
            /// <summary>The unique change password Id that was sent via email or returned by the Forgot Password API.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("changePasswordId")]
            public string? ChangePasswordId { get; set; }
#nullable restore
#else
            [QueryParameter("changePasswordId")]
            public string ChangePasswordId { get; set; }
#endif
            /// <summary>The email of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("email")]
            public string? Email { get; set; }
#nullable restore
#else
            [QueryParameter("email")]
            public string Email { get; set; }
#endif
            /// <summary>The email or username of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("loginId")]
            public string? LoginId { get; set; }
#nullable restore
#else
            [QueryParameter("loginId")]
            public string LoginId { get; set; }
#endif
            /// <summary>the identity types that FusionAuth will compare the loginId to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("loginIdTypes")]
            public string[]? LoginIdTypes { get; set; }
#nullable restore
#else
            [QueryParameter("loginIdTypes")]
            public string[] LoginIdTypes { get; set; }
#endif
            /// <summary>The username of the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("username")]
            public string? Username { get; set; }
#nullable restore
#else
            [QueryParameter("username")]
            public string Username { get; set; }
#endif
            /// <summary>The unique verification Id that has been set on the user object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("verificationId")]
            public string? VerificationId { get; set; }
#nullable restore
#else
            [QueryParameter("verificationId")]
            public string VerificationId { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UserRequestBuilderGetRequestConfiguration : RequestConfiguration<global::FusionAuth.Sdk.Api.User.UserRequestBuilder.UserRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class UserRequestBuilderPostRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
