// <auto-generated/>
#pragma warning disable CS0618
using FusionAuth.Sdk.Api.Webauthn.Assert;
using FusionAuth.Sdk.Api.Webauthn.Import;
using FusionAuth.Sdk.Api.Webauthn.Item;
using FusionAuth.Sdk.Api.Webauthn.Login;
using FusionAuth.Sdk.Api.Webauthn.Register;
using FusionAuth.Sdk.Api.Webauthn.Start;
using FusionAuth.Sdk.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace FusionAuth.Sdk.Api.Webauthn
{
    /// <summary>
    /// Builds and executes requests for operations under \api\webauthn
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WebauthnRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The assert property</summary>
        public global::FusionAuth.Sdk.Api.Webauthn.Assert.AssertRequestBuilder Assert
        {
            get => new global::FusionAuth.Sdk.Api.Webauthn.Assert.AssertRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The import property</summary>
        public global::FusionAuth.Sdk.Api.Webauthn.Import.ImportRequestBuilder Import
        {
            get => new global::FusionAuth.Sdk.Api.Webauthn.Import.ImportRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The login property</summary>
        public global::FusionAuth.Sdk.Api.Webauthn.Login.LoginRequestBuilder Login
        {
            get => new global::FusionAuth.Sdk.Api.Webauthn.Login.LoginRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The register property</summary>
        public global::FusionAuth.Sdk.Api.Webauthn.Register.RegisterRequestBuilder Register
        {
            get => new global::FusionAuth.Sdk.Api.Webauthn.Register.RegisterRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The start property</summary>
        public global::FusionAuth.Sdk.Api.Webauthn.Start.StartRequestBuilder Start
        {
            get => new global::FusionAuth.Sdk.Api.Webauthn.Start.StartRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the FusionAuth.Sdk.api.webauthn.item collection</summary>
        /// <param name="position">The Id of the WebAuthn credential to delete.</param>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Api.Webauthn.Item.WebauthnItemRequestBuilder"/></returns>
        public global::FusionAuth.Sdk.Api.Webauthn.Item.WebauthnItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("id", position);
                return new global::FusionAuth.Sdk.Api.Webauthn.Item.WebauthnItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WebauthnRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/webauthn{?userId*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WebauthnRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/webauthn{?userId*}", rawUrl)
        {
        }
        /// <summary>
        /// Retrieves all WebAuthn credentials for the given user.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.WebAuthnCredentialResponse"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::FusionAuth.Sdk.Models.Errors">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::FusionAuth.Sdk.Models.WebAuthnCredentialResponse?> GetAsync(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder.WebauthnRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::FusionAuth.Sdk.Models.WebAuthnCredentialResponse> GetAsync(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder.WebauthnRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::FusionAuth.Sdk.Models.Errors.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::FusionAuth.Sdk.Models.WebAuthnCredentialResponse>(requestInfo, global::FusionAuth.Sdk.Models.WebAuthnCredentialResponse.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Retrieves all WebAuthn credentials for the given user.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder.WebauthnRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder.WebauthnRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder WithUrl(string rawUrl)
        {
            return new global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Retrieves all WebAuthn credentials for the given user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WebauthnRequestBuilderGetQueryParameters 
        {
            /// <summary>The user&apos;s ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("userId")]
            public string? UserId { get; set; }
#nullable restore
#else
            [QueryParameter("userId")]
            public string UserId { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class WebauthnRequestBuilderGetRequestConfiguration : RequestConfiguration<global::FusionAuth.Sdk.Api.Webauthn.WebauthnRequestBuilder.WebauthnRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
