// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// Composed type wrapper for classes <see cref="global::FusionAuth.Sdk.Models.AppleIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.EpicGamesIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.ExternalJWTIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.FacebookIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.GoogleIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.HYPRIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.LinkedInIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.NintendoIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.OpenIdConnectIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.SAMLv2IdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.SAMLv2IdPInitiatedIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.SonyPSNIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.SteamIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.TwitchIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.TwitterIdentityProvider"/>, <see cref="global::FusionAuth.Sdk.Models.XboxIdentityProvider"/>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class IdentityProviderField : IComposedTypeWrapper, IParsable
    {
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.AppleIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.AppleIdentityProvider? AppleIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.AppleIdentityProvider AppleIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.EpicGamesIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.EpicGamesIdentityProvider? EpicGamesIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.EpicGamesIdentityProvider EpicGamesIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.ExternalJWTIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.ExternalJWTIdentityProvider? ExternalJWTIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.ExternalJWTIdentityProvider ExternalJWTIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.FacebookIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.FacebookIdentityProvider? FacebookIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.FacebookIdentityProvider FacebookIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.GoogleIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.GoogleIdentityProvider? GoogleIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.GoogleIdentityProvider GoogleIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.HYPRIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.HYPRIdentityProvider? HYPRIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.HYPRIdentityProvider HYPRIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.LinkedInIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.LinkedInIdentityProvider? LinkedInIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.LinkedInIdentityProvider LinkedInIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.NintendoIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.NintendoIdentityProvider? NintendoIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.NintendoIdentityProvider NintendoIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.OpenIdConnectIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.OpenIdConnectIdentityProvider? OpenIdConnectIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.OpenIdConnectIdentityProvider OpenIdConnectIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.SAMLv2IdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.SAMLv2IdentityProvider? SAMLv2IdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.SAMLv2IdentityProvider SAMLv2IdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.SAMLv2IdPInitiatedIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.SAMLv2IdPInitiatedIdentityProvider? SAMLv2IdPInitiatedIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.SAMLv2IdPInitiatedIdentityProvider SAMLv2IdPInitiatedIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.SonyPSNIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.SonyPSNIdentityProvider? SonyPSNIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.SonyPSNIdentityProvider SonyPSNIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.SteamIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.SteamIdentityProvider? SteamIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.SteamIdentityProvider SteamIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.TwitchIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.TwitchIdentityProvider? TwitchIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.TwitchIdentityProvider TwitchIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.TwitterIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.TwitterIdentityProvider? TwitterIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.TwitterIdentityProvider TwitterIdentityProvider { get; set; }
#endif
        /// <summary>Composed type representation for type <see cref="global::FusionAuth.Sdk.Models.XboxIdentityProvider"/></summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider? XboxIdentityProvider { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider XboxIdentityProvider { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.IdentityProviderField"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.IdentityProviderField CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("type")?.GetStringValue();
            var result = new global::FusionAuth.Sdk.Models.IdentityProviderField();
            if("Apple".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.AppleIdentityProvider = new global::FusionAuth.Sdk.Models.AppleIdentityProvider();
            }
            else if("EpicGames".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.EpicGamesIdentityProvider = new global::FusionAuth.Sdk.Models.EpicGamesIdentityProvider();
            }
            else if("ExternalJWT".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.ExternalJWTIdentityProvider = new global::FusionAuth.Sdk.Models.ExternalJWTIdentityProvider();
            }
            else if("Facebook".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.FacebookIdentityProvider = new global::FusionAuth.Sdk.Models.FacebookIdentityProvider();
            }
            else if("Google".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.GoogleIdentityProvider = new global::FusionAuth.Sdk.Models.GoogleIdentityProvider();
            }
            else if("HYPR".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.HYPRIdentityProvider = new global::FusionAuth.Sdk.Models.HYPRIdentityProvider();
            }
            else if("LinkedIn".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.LinkedInIdentityProvider = new global::FusionAuth.Sdk.Models.LinkedInIdentityProvider();
            }
            else if("Nintendo".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.NintendoIdentityProvider = new global::FusionAuth.Sdk.Models.NintendoIdentityProvider();
            }
            else if("OpenIdConnect".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.OpenIdConnectIdentityProvider = new global::FusionAuth.Sdk.Models.OpenIdConnectIdentityProvider();
            }
            else if("SAMLv2IdPInitiated".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.SAMLv2IdPInitiatedIdentityProvider = new global::FusionAuth.Sdk.Models.SAMLv2IdPInitiatedIdentityProvider();
            }
            else if("SAMLv2".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.SAMLv2IdentityProvider = new global::FusionAuth.Sdk.Models.SAMLv2IdentityProvider();
            }
            else if("SonyPSN".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.SonyPSNIdentityProvider = new global::FusionAuth.Sdk.Models.SonyPSNIdentityProvider();
            }
            else if("Steam".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.SteamIdentityProvider = new global::FusionAuth.Sdk.Models.SteamIdentityProvider();
            }
            else if("Twitch".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.TwitchIdentityProvider = new global::FusionAuth.Sdk.Models.TwitchIdentityProvider();
            }
            else if("Twitter".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.TwitterIdentityProvider = new global::FusionAuth.Sdk.Models.TwitterIdentityProvider();
            }
            else if("Xbox".Equals(mappingValue, StringComparison.OrdinalIgnoreCase))
            {
                result.XboxIdentityProvider = new global::FusionAuth.Sdk.Models.XboxIdentityProvider();
            }
            return result;
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            if(AppleIdentityProvider != null)
            {
                return AppleIdentityProvider.GetFieldDeserializers();
            }
            else if(EpicGamesIdentityProvider != null)
            {
                return EpicGamesIdentityProvider.GetFieldDeserializers();
            }
            else if(ExternalJWTIdentityProvider != null)
            {
                return ExternalJWTIdentityProvider.GetFieldDeserializers();
            }
            else if(FacebookIdentityProvider != null)
            {
                return FacebookIdentityProvider.GetFieldDeserializers();
            }
            else if(GoogleIdentityProvider != null)
            {
                return GoogleIdentityProvider.GetFieldDeserializers();
            }
            else if(HYPRIdentityProvider != null)
            {
                return HYPRIdentityProvider.GetFieldDeserializers();
            }
            else if(LinkedInIdentityProvider != null)
            {
                return LinkedInIdentityProvider.GetFieldDeserializers();
            }
            else if(NintendoIdentityProvider != null)
            {
                return NintendoIdentityProvider.GetFieldDeserializers();
            }
            else if(OpenIdConnectIdentityProvider != null)
            {
                return OpenIdConnectIdentityProvider.GetFieldDeserializers();
            }
            else if(SAMLv2IdentityProvider != null)
            {
                return SAMLv2IdentityProvider.GetFieldDeserializers();
            }
            else if(SAMLv2IdPInitiatedIdentityProvider != null)
            {
                return SAMLv2IdPInitiatedIdentityProvider.GetFieldDeserializers();
            }
            else if(SonyPSNIdentityProvider != null)
            {
                return SonyPSNIdentityProvider.GetFieldDeserializers();
            }
            else if(SteamIdentityProvider != null)
            {
                return SteamIdentityProvider.GetFieldDeserializers();
            }
            else if(TwitchIdentityProvider != null)
            {
                return TwitchIdentityProvider.GetFieldDeserializers();
            }
            else if(TwitterIdentityProvider != null)
            {
                return TwitterIdentityProvider.GetFieldDeserializers();
            }
            else if(XboxIdentityProvider != null)
            {
                return XboxIdentityProvider.GetFieldDeserializers();
            }
            return new Dictionary<string, Action<IParseNode>>();
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            if(AppleIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.AppleIdentityProvider>(null, AppleIdentityProvider);
            }
            else if(EpicGamesIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.EpicGamesIdentityProvider>(null, EpicGamesIdentityProvider);
            }
            else if(ExternalJWTIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.ExternalJWTIdentityProvider>(null, ExternalJWTIdentityProvider);
            }
            else if(FacebookIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.FacebookIdentityProvider>(null, FacebookIdentityProvider);
            }
            else if(GoogleIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.GoogleIdentityProvider>(null, GoogleIdentityProvider);
            }
            else if(HYPRIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.HYPRIdentityProvider>(null, HYPRIdentityProvider);
            }
            else if(LinkedInIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.LinkedInIdentityProvider>(null, LinkedInIdentityProvider);
            }
            else if(NintendoIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.NintendoIdentityProvider>(null, NintendoIdentityProvider);
            }
            else if(OpenIdConnectIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.OpenIdConnectIdentityProvider>(null, OpenIdConnectIdentityProvider);
            }
            else if(SAMLv2IdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.SAMLv2IdentityProvider>(null, SAMLv2IdentityProvider);
            }
            else if(SAMLv2IdPInitiatedIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.SAMLv2IdPInitiatedIdentityProvider>(null, SAMLv2IdPInitiatedIdentityProvider);
            }
            else if(SonyPSNIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.SonyPSNIdentityProvider>(null, SonyPSNIdentityProvider);
            }
            else if(SteamIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.SteamIdentityProvider>(null, SteamIdentityProvider);
            }
            else if(TwitchIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.TwitchIdentityProvider>(null, TwitchIdentityProvider);
            }
            else if(TwitterIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.TwitterIdentityProvider>(null, TwitterIdentityProvider);
            }
            else if(XboxIdentityProvider != null)
            {
                writer.WriteObjectValue<global::FusionAuth.Sdk.Models.XboxIdentityProvider>(null, XboxIdentityProvider);
            }
        }
    }
}
#pragma warning restore CS0618
