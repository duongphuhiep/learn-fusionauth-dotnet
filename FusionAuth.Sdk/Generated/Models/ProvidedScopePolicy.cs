// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// The handling policy for scopes provided by FusionAuth
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ProvidedScopePolicy : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? Address { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable Address { get; set; }
#endif
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? Email { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable Email { get; set; }
#endif
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? Phone { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable Phone { get; set; }
#endif
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? Profile { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable Profile { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.ProvidedScopePolicy"/> and sets the default values.
        /// </summary>
        public ProvidedScopePolicy()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.ProvidedScopePolicy"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.ProvidedScopePolicy CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.ProvidedScopePolicy();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "phone", n => { Phone = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "profile", n => { Profile = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("address", Address);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("email", Email);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("phone", Phone);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("profile", Profile);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
