// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PasswordValidationRules : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The breachDetection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.PasswordBreachDetection? BreachDetection { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.PasswordBreachDetection BreachDetection { get; set; }
#endif
        /// <summary>The maxLength property</summary>
        public int? MaxLength { get; set; }
        /// <summary>The minLength property</summary>
        public int? MinLength { get; set; }
        /// <summary>The rememberPreviousPasswords property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RememberPreviousPasswords? RememberPreviousPasswords { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RememberPreviousPasswords RememberPreviousPasswords { get; set; }
#endif
        /// <summary>The requireMixedCase property</summary>
        public bool? RequireMixedCase { get; set; }
        /// <summary>The requireNonAlpha property</summary>
        public bool? RequireNonAlpha { get; set; }
        /// <summary>The requireNumber property</summary>
        public bool? RequireNumber { get; set; }
        /// <summary>The validateOnLogin property</summary>
        public bool? ValidateOnLogin { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.PasswordValidationRules"/> and sets the default values.
        /// </summary>
        public PasswordValidationRules()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.PasswordValidationRules"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.PasswordValidationRules CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.PasswordValidationRules();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "breachDetection", n => { BreachDetection = n.GetObjectValue<global::FusionAuth.Sdk.Models.PasswordBreachDetection>(global::FusionAuth.Sdk.Models.PasswordBreachDetection.CreateFromDiscriminatorValue); } },
                { "maxLength", n => { MaxLength = n.GetIntValue(); } },
                { "minLength", n => { MinLength = n.GetIntValue(); } },
                { "rememberPreviousPasswords", n => { RememberPreviousPasswords = n.GetObjectValue<global::FusionAuth.Sdk.Models.RememberPreviousPasswords>(global::FusionAuth.Sdk.Models.RememberPreviousPasswords.CreateFromDiscriminatorValue); } },
                { "requireMixedCase", n => { RequireMixedCase = n.GetBoolValue(); } },
                { "requireNonAlpha", n => { RequireNonAlpha = n.GetBoolValue(); } },
                { "requireNumber", n => { RequireNumber = n.GetBoolValue(); } },
                { "validateOnLogin", n => { ValidateOnLogin = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.PasswordBreachDetection>("breachDetection", BreachDetection);
            writer.WriteIntValue("maxLength", MaxLength);
            writer.WriteIntValue("minLength", MinLength);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RememberPreviousPasswords>("rememberPreviousPasswords", RememberPreviousPasswords);
            writer.WriteBoolValue("requireMixedCase", RequireMixedCase);
            writer.WriteBoolValue("requireNonAlpha", RequireNonAlpha);
            writer.WriteBoolValue("requireNumber", RequireNumber);
            writer.WriteBoolValue("validateOnLogin", ValidateOnLogin);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
