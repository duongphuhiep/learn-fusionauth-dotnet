// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// Hold application phone configuration for template overrides.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ApplicationPhoneConfiguration : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The forgotPasswordTemplateId property</summary>
        public Guid? ForgotPasswordTemplateId { get; set; }
        /// <summary>The identityUpdateTemplateId property</summary>
        public Guid? IdentityUpdateTemplateId { get; set; }
        /// <summary>The loginIdInUseOnCreateTemplateId property</summary>
        public Guid? LoginIdInUseOnCreateTemplateId { get; set; }
        /// <summary>The loginIdInUseOnUpdateTemplateId property</summary>
        public Guid? LoginIdInUseOnUpdateTemplateId { get; set; }
        /// <summary>The loginNewDeviceTemplateId property</summary>
        public Guid? LoginNewDeviceTemplateId { get; set; }
        /// <summary>The loginSuspiciousTemplateId property</summary>
        public Guid? LoginSuspiciousTemplateId { get; set; }
        /// <summary>The passwordlessTemplateId property</summary>
        public Guid? PasswordlessTemplateId { get; set; }
        /// <summary>The passwordResetSuccessTemplateId property</summary>
        public Guid? PasswordResetSuccessTemplateId { get; set; }
        /// <summary>The passwordUpdateTemplateId property</summary>
        public Guid? PasswordUpdateTemplateId { get; set; }
        /// <summary>The setPasswordTemplateId property</summary>
        public Guid? SetPasswordTemplateId { get; set; }
        /// <summary>The twoFactorMethodAddTemplateId property</summary>
        public Guid? TwoFactorMethodAddTemplateId { get; set; }
        /// <summary>The twoFactorMethodRemoveTemplateId property</summary>
        public Guid? TwoFactorMethodRemoveTemplateId { get; set; }
        /// <summary>The verificationCompleteTemplateId property</summary>
        public Guid? VerificationCompleteTemplateId { get; set; }
        /// <summary>The verificationTemplateId property</summary>
        public Guid? VerificationTemplateId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.ApplicationPhoneConfiguration"/> and sets the default values.
        /// </summary>
        public ApplicationPhoneConfiguration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.ApplicationPhoneConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.ApplicationPhoneConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.ApplicationPhoneConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "forgotPasswordTemplateId", n => { ForgotPasswordTemplateId = n.GetGuidValue(); } },
                { "identityUpdateTemplateId", n => { IdentityUpdateTemplateId = n.GetGuidValue(); } },
                { "loginIdInUseOnCreateTemplateId", n => { LoginIdInUseOnCreateTemplateId = n.GetGuidValue(); } },
                { "loginIdInUseOnUpdateTemplateId", n => { LoginIdInUseOnUpdateTemplateId = n.GetGuidValue(); } },
                { "loginNewDeviceTemplateId", n => { LoginNewDeviceTemplateId = n.GetGuidValue(); } },
                { "loginSuspiciousTemplateId", n => { LoginSuspiciousTemplateId = n.GetGuidValue(); } },
                { "passwordResetSuccessTemplateId", n => { PasswordResetSuccessTemplateId = n.GetGuidValue(); } },
                { "passwordUpdateTemplateId", n => { PasswordUpdateTemplateId = n.GetGuidValue(); } },
                { "passwordlessTemplateId", n => { PasswordlessTemplateId = n.GetGuidValue(); } },
                { "setPasswordTemplateId", n => { SetPasswordTemplateId = n.GetGuidValue(); } },
                { "twoFactorMethodAddTemplateId", n => { TwoFactorMethodAddTemplateId = n.GetGuidValue(); } },
                { "twoFactorMethodRemoveTemplateId", n => { TwoFactorMethodRemoveTemplateId = n.GetGuidValue(); } },
                { "verificationCompleteTemplateId", n => { VerificationCompleteTemplateId = n.GetGuidValue(); } },
                { "verificationTemplateId", n => { VerificationTemplateId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("forgotPasswordTemplateId", ForgotPasswordTemplateId);
            writer.WriteGuidValue("identityUpdateTemplateId", IdentityUpdateTemplateId);
            writer.WriteGuidValue("loginIdInUseOnCreateTemplateId", LoginIdInUseOnCreateTemplateId);
            writer.WriteGuidValue("loginIdInUseOnUpdateTemplateId", LoginIdInUseOnUpdateTemplateId);
            writer.WriteGuidValue("loginNewDeviceTemplateId", LoginNewDeviceTemplateId);
            writer.WriteGuidValue("loginSuspiciousTemplateId", LoginSuspiciousTemplateId);
            writer.WriteGuidValue("passwordlessTemplateId", PasswordlessTemplateId);
            writer.WriteGuidValue("passwordResetSuccessTemplateId", PasswordResetSuccessTemplateId);
            writer.WriteGuidValue("passwordUpdateTemplateId", PasswordUpdateTemplateId);
            writer.WriteGuidValue("setPasswordTemplateId", SetPasswordTemplateId);
            writer.WriteGuidValue("twoFactorMethodAddTemplateId", TwoFactorMethodAddTemplateId);
            writer.WriteGuidValue("twoFactorMethodRemoveTemplateId", TwoFactorMethodRemoveTemplateId);
            writer.WriteGuidValue("verificationCompleteTemplateId", VerificationCompleteTemplateId);
            writer.WriteGuidValue("verificationTemplateId", VerificationTemplateId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
