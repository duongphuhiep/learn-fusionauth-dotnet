// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// Xbox gaming login provider.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class XboxIdentityProvider : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The applicationConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider_applicationConfiguration? ApplicationConfiguration { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider_applicationConfiguration ApplicationConfiguration { get; set; }
#endif
        /// <summary>The buttonText property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ButtonText { get; set; }
#nullable restore
#else
        public string ButtonText { get; set; }
#endif
        /// <summary>The client_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientId { get; set; }
#nullable restore
#else
        public string ClientId { get; set; }
#endif
        /// <summary>The client_secret property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientSecret { get; set; }
#nullable restore
#else
        public string ClientSecret { get; set; }
#endif
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider_data? Data { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider_data Data { get; set; }
#endif
        /// <summary>The debug property</summary>
        public bool? Debug { get; set; }
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>The lambdaConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.ProviderLambdaConfiguration? LambdaConfiguration { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.ProviderLambdaConfiguration LambdaConfiguration { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastUpdateInstant { get; set; }
        /// <summary>The IdP behavior when no user link has been made yet.</summary>
        public global::FusionAuth.Sdk.Models.IdentityProviderLinkingStrategy? LinkingStrategy { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The scope property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Scope { get; set; }
#nullable restore
#else
        public string Scope { get; set; }
#endif
        /// <summary>The tenantConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider_tenantConfiguration? TenantConfiguration { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.XboxIdentityProvider_tenantConfiguration TenantConfiguration { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::FusionAuth.Sdk.Models.IdentityProviderType? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.XboxIdentityProvider"/> and sets the default values.
        /// </summary>
        public XboxIdentityProvider()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.XboxIdentityProvider"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.XboxIdentityProvider CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.XboxIdentityProvider();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "applicationConfiguration", n => { ApplicationConfiguration = n.GetObjectValue<global::FusionAuth.Sdk.Models.XboxIdentityProvider_applicationConfiguration>(global::FusionAuth.Sdk.Models.XboxIdentityProvider_applicationConfiguration.CreateFromDiscriminatorValue); } },
                { "buttonText", n => { ButtonText = n.GetStringValue(); } },
                { "client_id", n => { ClientId = n.GetStringValue(); } },
                { "client_secret", n => { ClientSecret = n.GetStringValue(); } },
                { "data", n => { Data = n.GetObjectValue<global::FusionAuth.Sdk.Models.XboxIdentityProvider_data>(global::FusionAuth.Sdk.Models.XboxIdentityProvider_data.CreateFromDiscriminatorValue); } },
                { "debug", n => { Debug = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                { "lambdaConfiguration", n => { LambdaConfiguration = n.GetObjectValue<global::FusionAuth.Sdk.Models.ProviderLambdaConfiguration>(global::FusionAuth.Sdk.Models.ProviderLambdaConfiguration.CreateFromDiscriminatorValue); } },
                { "lastUpdateInstant", n => { LastUpdateInstant = n.GetLongValue(); } },
                { "linkingStrategy", n => { LinkingStrategy = n.GetEnumValue<global::FusionAuth.Sdk.Models.IdentityProviderLinkingStrategy>(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "scope", n => { Scope = n.GetStringValue(); } },
                { "tenantConfiguration", n => { TenantConfiguration = n.GetObjectValue<global::FusionAuth.Sdk.Models.XboxIdentityProvider_tenantConfiguration>(global::FusionAuth.Sdk.Models.XboxIdentityProvider_tenantConfiguration.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::FusionAuth.Sdk.Models.IdentityProviderType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.XboxIdentityProvider_applicationConfiguration>("applicationConfiguration", ApplicationConfiguration);
            writer.WriteStringValue("buttonText", ButtonText);
            writer.WriteStringValue("client_id", ClientId);
            writer.WriteStringValue("client_secret", ClientSecret);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.XboxIdentityProvider_data>("data", Data);
            writer.WriteBoolValue("debug", Debug);
            writer.WriteGuidValue("id", Id);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.ProviderLambdaConfiguration>("lambdaConfiguration", LambdaConfiguration);
            writer.WriteLongValue("lastUpdateInstant", LastUpdateInstant);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.IdentityProviderLinkingStrategy>("linkingStrategy", LinkingStrategy);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("scope", Scope);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.XboxIdentityProvider_tenantConfiguration>("tenantConfiguration", TenantConfiguration);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.IdentityProviderType>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
