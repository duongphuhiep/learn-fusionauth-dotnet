// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// Used by the Relying Party to specify their requirements for authenticator attributes. Fields use the deprecated &quot;resident key&quot; terminology to refer  to client-side discoverable credentials to maintain backwards compatibility with WebAuthn Level 1.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AuthenticatorSelectionCriteria : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Describes the &lt;a href=&quot;https:www.w3.orgTRwebauthn-2#authenticator-attachment-modality&quot;&gt;authenticator attachment modality&lt;a&gt;.</summary>
        public global::FusionAuth.Sdk.Models.AuthenticatorAttachment? AuthenticatorAttachment { get; set; }
        /// <summary>The requireResidentKey property</summary>
        public bool? RequireResidentKey { get; set; }
        /// <summary>Describes the Relying Party&apos;s requirements for &lt;a href=&quot;https:www.w3.orgTRwebauthn-2#client-side-discoverable-credential&quot;&gt;client-side  discoverable credentials&lt;a&gt; (formerly known as &quot;resident keys&quot;)</summary>
        public global::FusionAuth.Sdk.Models.ResidentKeyRequirement? ResidentKey { get; set; }
        /// <summary>Used to express whether the Relying Party requires &lt;a href=&quot;https:www.w3.orgTRwebauthn-2#user-verification&quot;&gt;user verification&lt;a&gt; for the  current operation.</summary>
        public global::FusionAuth.Sdk.Models.UserVerificationRequirement? UserVerification { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.AuthenticatorSelectionCriteria"/> and sets the default values.
        /// </summary>
        public AuthenticatorSelectionCriteria()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.AuthenticatorSelectionCriteria"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.AuthenticatorSelectionCriteria CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.AuthenticatorSelectionCriteria();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "authenticatorAttachment", n => { AuthenticatorAttachment = n.GetEnumValue<global::FusionAuth.Sdk.Models.AuthenticatorAttachment>(); } },
                { "requireResidentKey", n => { RequireResidentKey = n.GetBoolValue(); } },
                { "residentKey", n => { ResidentKey = n.GetEnumValue<global::FusionAuth.Sdk.Models.ResidentKeyRequirement>(); } },
                { "userVerification", n => { UserVerification = n.GetEnumValue<global::FusionAuth.Sdk.Models.UserVerificationRequirement>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.AuthenticatorAttachment>("authenticatorAttachment", AuthenticatorAttachment);
            writer.WriteBoolValue("requireResidentKey", RequireResidentKey);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.ResidentKeyRequirement>("residentKey", ResidentKey);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.UserVerificationRequirement>("userVerification", UserVerification);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
