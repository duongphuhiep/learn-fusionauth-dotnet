// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class IdentityProviderLink : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.IdentityProviderLink_data? Data { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.IdentityProviderLink_data Data { get; set; }
#endif
        /// <summary>The displayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The identityProviderId property</summary>
        public Guid? IdentityProviderId { get; set; }
        /// <summary>The identityProviderName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IdentityProviderName { get; set; }
#nullable restore
#else
        public string IdentityProviderName { get; set; }
#endif
        /// <summary>The identityProviderType property</summary>
        public global::FusionAuth.Sdk.Models.IdentityProviderType? IdentityProviderType { get; set; }
        /// <summary>The identityProviderUserId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? IdentityProviderUserId { get; set; }
#nullable restore
#else
        public string IdentityProviderUserId { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastLoginInstant { get; set; }
        /// <summary>The tenantId property</summary>
        public Guid? TenantId { get; set; }
        /// <summary>The token property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Token { get; set; }
#nullable restore
#else
        public string Token { get; set; }
#endif
        /// <summary>The userId property</summary>
        public Guid? UserId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.IdentityProviderLink"/> and sets the default values.
        /// </summary>
        public IdentityProviderLink()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.IdentityProviderLink"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.IdentityProviderLink CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.IdentityProviderLink();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "data", n => { Data = n.GetObjectValue<global::FusionAuth.Sdk.Models.IdentityProviderLink_data>(global::FusionAuth.Sdk.Models.IdentityProviderLink_data.CreateFromDiscriminatorValue); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "identityProviderId", n => { IdentityProviderId = n.GetGuidValue(); } },
                { "identityProviderName", n => { IdentityProviderName = n.GetStringValue(); } },
                { "identityProviderType", n => { IdentityProviderType = n.GetEnumValue<global::FusionAuth.Sdk.Models.IdentityProviderType>(); } },
                { "identityProviderUserId", n => { IdentityProviderUserId = n.GetStringValue(); } },
                { "insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                { "lastLoginInstant", n => { LastLoginInstant = n.GetLongValue(); } },
                { "tenantId", n => { TenantId = n.GetGuidValue(); } },
                { "token", n => { Token = n.GetStringValue(); } },
                { "userId", n => { UserId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.IdentityProviderLink_data>("data", Data);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteGuidValue("identityProviderId", IdentityProviderId);
            writer.WriteStringValue("identityProviderName", IdentityProviderName);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.IdentityProviderType>("identityProviderType", IdentityProviderType);
            writer.WriteStringValue("identityProviderUserId", IdentityProviderUserId);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteLongValue("lastLoginInstant", LastLoginInstant);
            writer.WriteGuidValue("tenantId", TenantId);
            writer.WriteStringValue("token", Token);
            writer.WriteGuidValue("userId", UserId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
