// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// Registration API request object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RegistrationRequest : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The disableDomainBlock property</summary>
        public bool? DisableDomainBlock { get; set; }
        /// <summary>Information about a user event (login, register, etc) that helps identify the source of the event (location, device type, OS, etc).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.EventInfo? EventInfo { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.EventInfo EventInfo { get; set; }
#endif
        /// <summary>The generateAuthenticationToken property</summary>
        public bool? GenerateAuthenticationToken { get; set; }
        /// <summary>User registration information for a single application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.UserRegistration? Registration { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.UserRegistration Registration { get; set; }
#endif
        /// <summary>The sendSetPasswordEmail property</summary>
        public bool? SendSetPasswordEmail { get; set; }
        /// <summary>Used to indicate which identity type a password &quot;request&quot; might go to. It could be  used for send set passwords or send password resets.</summary>
        public global::FusionAuth.Sdk.Models.SendSetPasswordIdentityType? SendSetPasswordIdentityType { get; set; }
        /// <summary>The skipRegistrationVerification property</summary>
        public bool? SkipRegistrationVerification { get; set; }
        /// <summary>The skipVerification property</summary>
        public bool? SkipVerification { get; set; }
        /// <summary>The public, global view of a User. This object contains all global information about the user including birthdate, registration information  preferred languages, global attributes, etc.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.User? User { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.User User { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.RegistrationRequest"/> and sets the default values.
        /// </summary>
        public RegistrationRequest()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.RegistrationRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.RegistrationRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.RegistrationRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "disableDomainBlock", n => { DisableDomainBlock = n.GetBoolValue(); } },
                { "eventInfo", n => { EventInfo = n.GetObjectValue<global::FusionAuth.Sdk.Models.EventInfo>(global::FusionAuth.Sdk.Models.EventInfo.CreateFromDiscriminatorValue); } },
                { "generateAuthenticationToken", n => { GenerateAuthenticationToken = n.GetBoolValue(); } },
                { "registration", n => { Registration = n.GetObjectValue<global::FusionAuth.Sdk.Models.UserRegistration>(global::FusionAuth.Sdk.Models.UserRegistration.CreateFromDiscriminatorValue); } },
                { "sendSetPasswordEmail", n => { SendSetPasswordEmail = n.GetBoolValue(); } },
                { "sendSetPasswordIdentityType", n => { SendSetPasswordIdentityType = n.GetEnumValue<global::FusionAuth.Sdk.Models.SendSetPasswordIdentityType>(); } },
                { "skipRegistrationVerification", n => { SkipRegistrationVerification = n.GetBoolValue(); } },
                { "skipVerification", n => { SkipVerification = n.GetBoolValue(); } },
                { "user", n => { User = n.GetObjectValue<global::FusionAuth.Sdk.Models.User>(global::FusionAuth.Sdk.Models.User.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("disableDomainBlock", DisableDomainBlock);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.EventInfo>("eventInfo", EventInfo);
            writer.WriteBoolValue("generateAuthenticationToken", GenerateAuthenticationToken);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.UserRegistration>("registration", Registration);
            writer.WriteBoolValue("sendSetPasswordEmail", SendSetPasswordEmail);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.SendSetPasswordIdentityType>("sendSetPasswordIdentityType", SendSetPasswordIdentityType);
            writer.WriteBoolValue("skipRegistrationVerification", SkipRegistrationVerification);
            writer.WriteBoolValue("skipVerification", SkipVerification);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.User>("user", User);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
