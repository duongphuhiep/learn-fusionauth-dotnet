// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// The summary of the action that is preventing login to be returned on the login response.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class LoginPreventedResponse : IAdditionalDataHolder, IParsable
    {
        /// <summary>The actionerUserId property</summary>
        public Guid? ActionerUserId { get; set; }
        /// <summary>The actionId property</summary>
        public Guid? ActionId { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? Expiry { get; set; }
        /// <summary>The localizedName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocalizedName { get; set; }
#nullable restore
#else
        public string LocalizedName { get; set; }
#endif
        /// <summary>The localizedOption property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocalizedOption { get; set; }
#nullable restore
#else
        public string LocalizedOption { get; set; }
#endif
        /// <summary>The localizedReason property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LocalizedReason { get; set; }
#nullable restore
#else
        public string LocalizedReason { get; set; }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The option property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Option { get; set; }
#nullable restore
#else
        public string Option { get; set; }
#endif
        /// <summary>The reason property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Reason { get; set; }
#nullable restore
#else
        public string Reason { get; set; }
#endif
        /// <summary>The reasonCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReasonCode { get; set; }
#nullable restore
#else
        public string ReasonCode { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.LoginPreventedResponse"/> and sets the default values.
        /// </summary>
        public LoginPreventedResponse()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.LoginPreventedResponse"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.LoginPreventedResponse CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.LoginPreventedResponse();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actionId", n => { ActionId = n.GetGuidValue(); } },
                { "actionerUserId", n => { ActionerUserId = n.GetGuidValue(); } },
                { "expiry", n => { Expiry = n.GetLongValue(); } },
                { "localizedName", n => { LocalizedName = n.GetStringValue(); } },
                { "localizedOption", n => { LocalizedOption = n.GetStringValue(); } },
                { "localizedReason", n => { LocalizedReason = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "option", n => { Option = n.GetStringValue(); } },
                { "reason", n => { Reason = n.GetStringValue(); } },
                { "reasonCode", n => { ReasonCode = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("actionerUserId", ActionerUserId);
            writer.WriteGuidValue("actionId", ActionId);
            writer.WriteLongValue("expiry", Expiry);
            writer.WriteStringValue("localizedName", LocalizedName);
            writer.WriteStringValue("localizedOption", LocalizedOption);
            writer.WriteStringValue("localizedReason", LocalizedReason);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("option", Option);
            writer.WriteStringValue("reason", Reason);
            writer.WriteStringValue("reasonCode", ReasonCode);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
