// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RegistrationConfiguration : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? BirthDate { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable BirthDate { get; set; }
#endif
        /// <summary>The confirmPassword property</summary>
        public bool? ConfirmPassword { get; set; }
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? FirstName { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable FirstName { get; set; }
#endif
        /// <summary>The formId property</summary>
        public Guid? FormId { get; set; }
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? FullName { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable FullName { get; set; }
#endif
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? LastName { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable LastName { get; set; }
#endif
        /// <summary>This is separate from IdentityType.</summary>
        public global::FusionAuth.Sdk.Models.LoginIdType? LoginIdType { get; set; }
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? MiddleName { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable MiddleName { get; set; }
#endif
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? MobilePhone { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable MobilePhone { get; set; }
#endif
        /// <summary>Something that can be required and thus also optional. This currently extends Enableable because anything that is  requiredoptional is almost always enableable as well.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Requirable? PreferredLanguages { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Requirable PreferredLanguages { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::FusionAuth.Sdk.Models.RegistrationType? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.RegistrationConfiguration"/> and sets the default values.
        /// </summary>
        public RegistrationConfiguration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.RegistrationConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.RegistrationConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.RegistrationConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "birthDate", n => { BirthDate = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "confirmPassword", n => { ConfirmPassword = n.GetBoolValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "firstName", n => { FirstName = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "formId", n => { FormId = n.GetGuidValue(); } },
                { "fullName", n => { FullName = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "lastName", n => { LastName = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "loginIdType", n => { LoginIdType = n.GetEnumValue<global::FusionAuth.Sdk.Models.LoginIdType>(); } },
                { "middleName", n => { MiddleName = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "mobilePhone", n => { MobilePhone = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "preferredLanguages", n => { PreferredLanguages = n.GetObjectValue<global::FusionAuth.Sdk.Models.Requirable>(global::FusionAuth.Sdk.Models.Requirable.CreateFromDiscriminatorValue); } },
                { "type", n => { Type = n.GetEnumValue<global::FusionAuth.Sdk.Models.RegistrationType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("birthDate", BirthDate);
            writer.WriteBoolValue("confirmPassword", ConfirmPassword);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("firstName", FirstName);
            writer.WriteGuidValue("formId", FormId);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("fullName", FullName);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("lastName", LastName);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.LoginIdType>("loginIdType", LoginIdType);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("middleName", MiddleName);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("mobilePhone", MobilePhone);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Requirable>("preferredLanguages", PreferredLanguages);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.RegistrationType>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
