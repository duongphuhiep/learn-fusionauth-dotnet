// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// JWT Configuration. A JWT Configuration for an Application may not be active if it is using the global configuration, the configuration  may be &lt;code&gt;enabled = false&lt;code&gt;.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class JWTConfiguration : IAdditionalDataHolder, IParsable
    {
        /// <summary>The accessTokenKeyId property</summary>
        public Guid? AccessTokenKeyId { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The enabled property</summary>
        public bool? Enabled { get; set; }
        /// <summary>The idTokenKeyId property</summary>
        public Guid? IdTokenKeyId { get; set; }
        /// <summary>The refreshTokenExpirationPolicy property</summary>
        public global::FusionAuth.Sdk.Models.RefreshTokenExpirationPolicy? RefreshTokenExpirationPolicy { get; set; }
        /// <summary>Refresh token one-time use configuration. This configuration is utilized when the usage policy is  configured for one-time use.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RefreshTokenOneTimeUseConfiguration? RefreshTokenOneTimeUseConfiguration { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RefreshTokenOneTimeUseConfiguration RefreshTokenOneTimeUseConfiguration { get; set; }
#endif
        /// <summary>The refreshTokenRevocationPolicy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RefreshTokenRevocationPolicy? RefreshTokenRevocationPolicy { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RefreshTokenRevocationPolicy RefreshTokenRevocationPolicy { get; set; }
#endif
        /// <summary>The refreshTokenSlidingWindowConfiguration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RefreshTokenSlidingWindowConfiguration? RefreshTokenSlidingWindowConfiguration { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RefreshTokenSlidingWindowConfiguration RefreshTokenSlidingWindowConfiguration { get; set; }
#endif
        /// <summary>The refreshTokenTimeToLiveInMinutes property</summary>
        public int? RefreshTokenTimeToLiveInMinutes { get; set; }
        /// <summary>The refreshTokenUsagePolicy property</summary>
        public global::FusionAuth.Sdk.Models.RefreshTokenUsagePolicy? RefreshTokenUsagePolicy { get; set; }
        /// <summary>The timeToLiveInSeconds property</summary>
        public int? TimeToLiveInSeconds { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.JWTConfiguration"/> and sets the default values.
        /// </summary>
        public JWTConfiguration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.JWTConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.JWTConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.JWTConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accessTokenKeyId", n => { AccessTokenKeyId = n.GetGuidValue(); } },
                { "enabled", n => { Enabled = n.GetBoolValue(); } },
                { "idTokenKeyId", n => { IdTokenKeyId = n.GetGuidValue(); } },
                { "refreshTokenExpirationPolicy", n => { RefreshTokenExpirationPolicy = n.GetEnumValue<global::FusionAuth.Sdk.Models.RefreshTokenExpirationPolicy>(); } },
                { "refreshTokenOneTimeUseConfiguration", n => { RefreshTokenOneTimeUseConfiguration = n.GetObjectValue<global::FusionAuth.Sdk.Models.RefreshTokenOneTimeUseConfiguration>(global::FusionAuth.Sdk.Models.RefreshTokenOneTimeUseConfiguration.CreateFromDiscriminatorValue); } },
                { "refreshTokenRevocationPolicy", n => { RefreshTokenRevocationPolicy = n.GetObjectValue<global::FusionAuth.Sdk.Models.RefreshTokenRevocationPolicy>(global::FusionAuth.Sdk.Models.RefreshTokenRevocationPolicy.CreateFromDiscriminatorValue); } },
                { "refreshTokenSlidingWindowConfiguration", n => { RefreshTokenSlidingWindowConfiguration = n.GetObjectValue<global::FusionAuth.Sdk.Models.RefreshTokenSlidingWindowConfiguration>(global::FusionAuth.Sdk.Models.RefreshTokenSlidingWindowConfiguration.CreateFromDiscriminatorValue); } },
                { "refreshTokenTimeToLiveInMinutes", n => { RefreshTokenTimeToLiveInMinutes = n.GetIntValue(); } },
                { "refreshTokenUsagePolicy", n => { RefreshTokenUsagePolicy = n.GetEnumValue<global::FusionAuth.Sdk.Models.RefreshTokenUsagePolicy>(); } },
                { "timeToLiveInSeconds", n => { TimeToLiveInSeconds = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteGuidValue("accessTokenKeyId", AccessTokenKeyId);
            writer.WriteBoolValue("enabled", Enabled);
            writer.WriteGuidValue("idTokenKeyId", IdTokenKeyId);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.RefreshTokenExpirationPolicy>("refreshTokenExpirationPolicy", RefreshTokenExpirationPolicy);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RefreshTokenOneTimeUseConfiguration>("refreshTokenOneTimeUseConfiguration", RefreshTokenOneTimeUseConfiguration);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RefreshTokenRevocationPolicy>("refreshTokenRevocationPolicy", RefreshTokenRevocationPolicy);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RefreshTokenSlidingWindowConfiguration>("refreshTokenSlidingWindowConfiguration", RefreshTokenSlidingWindowConfiguration);
            writer.WriteIntValue("refreshTokenTimeToLiveInMinutes", RefreshTokenTimeToLiveInMinutes);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.RefreshTokenUsagePolicy>("refreshTokenUsagePolicy", RefreshTokenUsagePolicy);
            writer.WriteIntValue("timeToLiveInSeconds", TimeToLiveInSeconds);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
