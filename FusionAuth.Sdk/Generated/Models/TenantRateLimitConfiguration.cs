// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TenantRateLimitConfiguration : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The failedLogin property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? FailedLogin { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration FailedLogin { get; set; }
#endif
        /// <summary>The forgotPassword property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? ForgotPassword { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration ForgotPassword { get; set; }
#endif
        /// <summary>The sendEmailVerification property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? SendEmailVerification { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration SendEmailVerification { get; set; }
#endif
        /// <summary>The sendPasswordless property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? SendPasswordless { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration SendPasswordless { get; set; }
#endif
        /// <summary>The sendPasswordlessPhone property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? SendPasswordlessPhone { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration SendPasswordlessPhone { get; set; }
#endif
        /// <summary>The sendPhoneVerification property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? SendPhoneVerification { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration SendPhoneVerification { get; set; }
#endif
        /// <summary>The sendRegistrationVerification property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? SendRegistrationVerification { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration SendRegistrationVerification { get; set; }
#endif
        /// <summary>The sendTwoFactor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration? SendTwoFactor { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration SendTwoFactor { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.TenantRateLimitConfiguration"/> and sets the default values.
        /// </summary>
        public TenantRateLimitConfiguration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.TenantRateLimitConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.TenantRateLimitConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.TenantRateLimitConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "failedLogin", n => { FailedLogin = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
                { "forgotPassword", n => { ForgotPassword = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
                { "sendEmailVerification", n => { SendEmailVerification = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
                { "sendPasswordless", n => { SendPasswordless = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
                { "sendPasswordlessPhone", n => { SendPasswordlessPhone = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
                { "sendPhoneVerification", n => { SendPhoneVerification = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
                { "sendRegistrationVerification", n => { SendRegistrationVerification = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
                { "sendTwoFactor", n => { SendTwoFactor = n.GetObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>(global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("failedLogin", FailedLogin);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("forgotPassword", ForgotPassword);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("sendEmailVerification", SendEmailVerification);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("sendPasswordless", SendPasswordless);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("sendPasswordlessPhone", SendPasswordlessPhone);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("sendPhoneVerification", SendPhoneVerification);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("sendRegistrationVerification", SendRegistrationVerification);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.RateLimitedRequestConfiguration>("sendTwoFactor", SendTwoFactor);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
