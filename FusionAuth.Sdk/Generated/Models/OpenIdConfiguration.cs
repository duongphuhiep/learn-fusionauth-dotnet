// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// OpenID Connect Configuration as described by the &lt;a href=&quot;https:openid.netspecsopenid-connect-discovery-1_0.html#ProviderMetadata&quot;&gt;OpenID  Provider Metadata&lt;a&gt;.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OpenIdConfiguration : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The authorization_endpoint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AuthorizationEndpoint { get; set; }
#nullable restore
#else
        public string AuthorizationEndpoint { get; set; }
#endif
        /// <summary>The backchannel_logout_supported property</summary>
        public bool? BackchannelLogoutSupported { get; set; }
        /// <summary>The claims_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ClaimsSupported { get; set; }
#nullable restore
#else
        public List<string> ClaimsSupported { get; set; }
#endif
        /// <summary>The device_authorization_endpoint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceAuthorizationEndpoint { get; set; }
#nullable restore
#else
        public string DeviceAuthorizationEndpoint { get; set; }
#endif
        /// <summary>The end_session_endpoint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EndSessionEndpoint { get; set; }
#nullable restore
#else
        public string EndSessionEndpoint { get; set; }
#endif
        /// <summary>The frontchannel_logout_supported property</summary>
        public bool? FrontchannelLogoutSupported { get; set; }
        /// <summary>The grant_types_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? GrantTypesSupported { get; set; }
#nullable restore
#else
        public List<string> GrantTypesSupported { get; set; }
#endif
        /// <summary>The id_token_signing_alg_values_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? IdTokenSigningAlgValuesSupported { get; set; }
#nullable restore
#else
        public List<string> IdTokenSigningAlgValuesSupported { get; set; }
#endif
        /// <summary>The issuer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Issuer { get; set; }
#nullable restore
#else
        public string Issuer { get; set; }
#endif
        /// <summary>The jwks_uri property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JwksUri { get; set; }
#nullable restore
#else
        public string JwksUri { get; set; }
#endif
        /// <summary>The response_modes_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ResponseModesSupported { get; set; }
#nullable restore
#else
        public List<string> ResponseModesSupported { get; set; }
#endif
        /// <summary>The response_types_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ResponseTypesSupported { get; set; }
#nullable restore
#else
        public List<string> ResponseTypesSupported { get; set; }
#endif
        /// <summary>The scopes_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ScopesSupported { get; set; }
#nullable restore
#else
        public List<string> ScopesSupported { get; set; }
#endif
        /// <summary>The subject_types_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SubjectTypesSupported { get; set; }
#nullable restore
#else
        public List<string> SubjectTypesSupported { get; set; }
#endif
        /// <summary>The token_endpoint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TokenEndpoint { get; set; }
#nullable restore
#else
        public string TokenEndpoint { get; set; }
#endif
        /// <summary>The token_endpoint_auth_methods_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TokenEndpointAuthMethodsSupported { get; set; }
#nullable restore
#else
        public List<string> TokenEndpointAuthMethodsSupported { get; set; }
#endif
        /// <summary>The userinfo_endpoint property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserinfoEndpoint { get; set; }
#nullable restore
#else
        public string UserinfoEndpoint { get; set; }
#endif
        /// <summary>The userinfo_signing_alg_values_supported property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? UserinfoSigningAlgValuesSupported { get; set; }
#nullable restore
#else
        public List<string> UserinfoSigningAlgValuesSupported { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.OpenIdConfiguration"/> and sets the default values.
        /// </summary>
        public OpenIdConfiguration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.OpenIdConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.OpenIdConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.OpenIdConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "authorization_endpoint", n => { AuthorizationEndpoint = n.GetStringValue(); } },
                { "backchannel_logout_supported", n => { BackchannelLogoutSupported = n.GetBoolValue(); } },
                { "claims_supported", n => { ClaimsSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "device_authorization_endpoint", n => { DeviceAuthorizationEndpoint = n.GetStringValue(); } },
                { "end_session_endpoint", n => { EndSessionEndpoint = n.GetStringValue(); } },
                { "frontchannel_logout_supported", n => { FrontchannelLogoutSupported = n.GetBoolValue(); } },
                { "grant_types_supported", n => { GrantTypesSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "id_token_signing_alg_values_supported", n => { IdTokenSigningAlgValuesSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "issuer", n => { Issuer = n.GetStringValue(); } },
                { "jwks_uri", n => { JwksUri = n.GetStringValue(); } },
                { "response_modes_supported", n => { ResponseModesSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "response_types_supported", n => { ResponseTypesSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "scopes_supported", n => { ScopesSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "subject_types_supported", n => { SubjectTypesSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "token_endpoint", n => { TokenEndpoint = n.GetStringValue(); } },
                { "token_endpoint_auth_methods_supported", n => { TokenEndpointAuthMethodsSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "userinfo_endpoint", n => { UserinfoEndpoint = n.GetStringValue(); } },
                { "userinfo_signing_alg_values_supported", n => { UserinfoSigningAlgValuesSupported = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("authorization_endpoint", AuthorizationEndpoint);
            writer.WriteBoolValue("backchannel_logout_supported", BackchannelLogoutSupported);
            writer.WriteCollectionOfPrimitiveValues<string>("claims_supported", ClaimsSupported);
            writer.WriteStringValue("device_authorization_endpoint", DeviceAuthorizationEndpoint);
            writer.WriteStringValue("end_session_endpoint", EndSessionEndpoint);
            writer.WriteBoolValue("frontchannel_logout_supported", FrontchannelLogoutSupported);
            writer.WriteCollectionOfPrimitiveValues<string>("grant_types_supported", GrantTypesSupported);
            writer.WriteCollectionOfPrimitiveValues<string>("id_token_signing_alg_values_supported", IdTokenSigningAlgValuesSupported);
            writer.WriteStringValue("issuer", Issuer);
            writer.WriteStringValue("jwks_uri", JwksUri);
            writer.WriteCollectionOfPrimitiveValues<string>("response_modes_supported", ResponseModesSupported);
            writer.WriteCollectionOfPrimitiveValues<string>("response_types_supported", ResponseTypesSupported);
            writer.WriteCollectionOfPrimitiveValues<string>("scopes_supported", ScopesSupported);
            writer.WriteCollectionOfPrimitiveValues<string>("subject_types_supported", SubjectTypesSupported);
            writer.WriteStringValue("token_endpoint", TokenEndpoint);
            writer.WriteCollectionOfPrimitiveValues<string>("token_endpoint_auth_methods_supported", TokenEndpointAuthMethodsSupported);
            writer.WriteStringValue("userinfo_endpoint", UserinfoEndpoint);
            writer.WriteCollectionOfPrimitiveValues<string>("userinfo_signing_alg_values_supported", UserinfoSigningAlgValuesSupported);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
