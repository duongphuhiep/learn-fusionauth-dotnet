// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// Configuration for the behavior of failed login attempts. This helps us protect against brute force password attacks.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FailedAuthenticationConfiguration : IAdditionalDataHolder, IParsable
    {
        /// <summary>A policy to configure if and when the user-action is canceled prior to the expiration of the action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.FailedAuthenticationActionCancelPolicy? ActionCancelPolicy { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.FailedAuthenticationActionCancelPolicy ActionCancelPolicy { get; set; }
#endif
        /// <summary>The actionDuration property</summary>
        public long? ActionDuration { get; set; }
        /// <summary>The actionDurationUnit property</summary>
        public global::FusionAuth.Sdk.Models.ExpiryUnit? ActionDurationUnit { get; set; }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The emailUser property</summary>
        public bool? EmailUser { get; set; }
        /// <summary>The resetCountInSeconds property</summary>
        public int? ResetCountInSeconds { get; set; }
        /// <summary>The tooManyAttempts property</summary>
        public int? TooManyAttempts { get; set; }
        /// <summary>The userActionId property</summary>
        public Guid? UserActionId { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.FailedAuthenticationConfiguration"/> and sets the default values.
        /// </summary>
        public FailedAuthenticationConfiguration()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.FailedAuthenticationConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.FailedAuthenticationConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.FailedAuthenticationConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actionCancelPolicy", n => { ActionCancelPolicy = n.GetObjectValue<global::FusionAuth.Sdk.Models.FailedAuthenticationActionCancelPolicy>(global::FusionAuth.Sdk.Models.FailedAuthenticationActionCancelPolicy.CreateFromDiscriminatorValue); } },
                { "actionDuration", n => { ActionDuration = n.GetLongValue(); } },
                { "actionDurationUnit", n => { ActionDurationUnit = n.GetEnumValue<global::FusionAuth.Sdk.Models.ExpiryUnit>(); } },
                { "emailUser", n => { EmailUser = n.GetBoolValue(); } },
                { "resetCountInSeconds", n => { ResetCountInSeconds = n.GetIntValue(); } },
                { "tooManyAttempts", n => { TooManyAttempts = n.GetIntValue(); } },
                { "userActionId", n => { UserActionId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.FailedAuthenticationActionCancelPolicy>("actionCancelPolicy", ActionCancelPolicy);
            writer.WriteLongValue("actionDuration", ActionDuration);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.ExpiryUnit>("actionDurationUnit", ActionDurationUnit);
            writer.WriteBoolValue("emailUser", EmailUser);
            writer.WriteIntValue("resetCountInSeconds", ResetCountInSeconds);
            writer.WriteIntValue("tooManyAttempts", TooManyAttempts);
            writer.WriteGuidValue("userActionId", UserActionId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
