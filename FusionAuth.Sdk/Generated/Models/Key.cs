// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// Domain for a public key, key pair or an HMAC secret. This is used by KeyMaster to manage keys for JWTs, SAML, etc.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Key : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The algorithm property</summary>
        public global::FusionAuth.Sdk.Models.KeyAlgorithm? Algorithm { get; set; }
        /// <summary>The certificate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Certificate { get; set; }
#nullable restore
#else
        public string Certificate { get; set; }
#endif
        /// <summary>The certificateInformation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.CertificateInformation? CertificateInformation { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.CertificateInformation CertificateInformation { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? ExpirationInstant { get; set; }
        /// <summary>The hasPrivateKey property</summary>
        public bool? HasPrivateKey { get; set; }
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>The issuer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Issuer { get; set; }
#nullable restore
#else
        public string Issuer { get; set; }
#endif
        /// <summary>The kid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Kid { get; set; }
#nullable restore
#else
        public string Kid { get; set; }
#endif
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastUpdateInstant { get; set; }
        /// <summary>The length property</summary>
        public int? Length { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The privateKey property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrivateKey { get; set; }
#nullable restore
#else
        public string PrivateKey { get; set; }
#endif
        /// <summary>The publicKey property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublicKey { get; set; }
#nullable restore
#else
        public string PublicKey { get; set; }
#endif
        /// <summary>The secret property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Secret { get; set; }
#nullable restore
#else
        public string Secret { get; set; }
#endif
        /// <summary>The type property</summary>
        public global::FusionAuth.Sdk.Models.KeyType? Type { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.Key"/> and sets the default values.
        /// </summary>
        public Key()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.Key"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.Key CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.Key();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "algorithm", n => { Algorithm = n.GetEnumValue<global::FusionAuth.Sdk.Models.KeyAlgorithm>(); } },
                { "certificate", n => { Certificate = n.GetStringValue(); } },
                { "certificateInformation", n => { CertificateInformation = n.GetObjectValue<global::FusionAuth.Sdk.Models.CertificateInformation>(global::FusionAuth.Sdk.Models.CertificateInformation.CreateFromDiscriminatorValue); } },
                { "expirationInstant", n => { ExpirationInstant = n.GetLongValue(); } },
                { "hasPrivateKey", n => { HasPrivateKey = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                { "issuer", n => { Issuer = n.GetStringValue(); } },
                { "kid", n => { Kid = n.GetStringValue(); } },
                { "lastUpdateInstant", n => { LastUpdateInstant = n.GetLongValue(); } },
                { "length", n => { Length = n.GetIntValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "privateKey", n => { PrivateKey = n.GetStringValue(); } },
                { "publicKey", n => { PublicKey = n.GetStringValue(); } },
                { "secret", n => { Secret = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::FusionAuth.Sdk.Models.KeyType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.KeyAlgorithm>("algorithm", Algorithm);
            writer.WriteStringValue("certificate", Certificate);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.CertificateInformation>("certificateInformation", CertificateInformation);
            writer.WriteLongValue("expirationInstant", ExpirationInstant);
            writer.WriteBoolValue("hasPrivateKey", HasPrivateKey);
            writer.WriteGuidValue("id", Id);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteStringValue("issuer", Issuer);
            writer.WriteStringValue("kid", Kid);
            writer.WriteLongValue("lastUpdateInstant", LastUpdateInstant);
            writer.WriteIntValue("length", Length);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("privateKey", PrivateKey);
            writer.WriteStringValue("publicKey", PublicKey);
            writer.WriteStringValue("secret", Secret);
            writer.WriteEnumValue<global::FusionAuth.Sdk.Models.KeyType>("type", Type);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
