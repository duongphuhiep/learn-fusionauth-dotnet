// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace FusionAuth.Sdk.Models
{
    /// <summary>
    /// A server where events are sent. This includes user action events and any other events sent by FusionAuth.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Webhook : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The connectTimeout property</summary>
        public int? ConnectTimeout { get; set; }
        /// <summary>The data property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Webhook_data? Data { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Webhook_data Data { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The eventsEnabled property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.Webhook_eventsEnabled? EventsEnabled { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.Webhook_eventsEnabled EventsEnabled { get; set; }
#endif
        /// <summary>The global property</summary>
        public bool? Global { get; set; }
        /// <summary>Type for webhook headers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.HTTPHeaders? Headers { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.HTTPHeaders Headers { get; set; }
#endif
        /// <summary>The httpAuthenticationPassword property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HttpAuthenticationPassword { get; set; }
#nullable restore
#else
        public string HttpAuthenticationPassword { get; set; }
#endif
        /// <summary>The httpAuthenticationUsername property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HttpAuthenticationUsername { get; set; }
#nullable restore
#else
        public string HttpAuthenticationUsername { get; set; }
#endif
        /// <summary>The id property</summary>
        public Guid? Id { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? InsertInstant { get; set; }
        /// <summary>The number of milliseconds since the unix epoch: January 1, 1970 00:00:00 UTC. This value is always in UTC.</summary>
        public long? LastUpdateInstant { get; set; }
        /// <summary>The readTimeout property</summary>
        public int? ReadTimeout { get; set; }
        /// <summary>Configuration for signing webhooks.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::FusionAuth.Sdk.Models.WebhookSignatureConfiguration? SignatureConfiguration { get; set; }
#nullable restore
#else
        public global::FusionAuth.Sdk.Models.WebhookSignatureConfiguration SignatureConfiguration { get; set; }
#endif
        /// <summary>The sslCertificate property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SslCertificate { get; set; }
#nullable restore
#else
        public string SslCertificate { get; set; }
#endif
        /// <summary>The sslCertificateKeyId property</summary>
        public Guid? SslCertificateKeyId { get; set; }
        /// <summary>The tenantIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Guid?>? TenantIds { get; set; }
#nullable restore
#else
        public List<Guid?> TenantIds { get; set; }
#endif
        /// <summary>The url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Url { get; set; }
#nullable restore
#else
        public string Url { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::FusionAuth.Sdk.Models.Webhook"/> and sets the default values.
        /// </summary>
        public Webhook()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::FusionAuth.Sdk.Models.Webhook"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::FusionAuth.Sdk.Models.Webhook CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::FusionAuth.Sdk.Models.Webhook();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "connectTimeout", n => { ConnectTimeout = n.GetIntValue(); } },
                { "data", n => { Data = n.GetObjectValue<global::FusionAuth.Sdk.Models.Webhook_data>(global::FusionAuth.Sdk.Models.Webhook_data.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "eventsEnabled", n => { EventsEnabled = n.GetObjectValue<global::FusionAuth.Sdk.Models.Webhook_eventsEnabled>(global::FusionAuth.Sdk.Models.Webhook_eventsEnabled.CreateFromDiscriminatorValue); } },
                { "global", n => { Global = n.GetBoolValue(); } },
                { "headers", n => { Headers = n.GetObjectValue<global::FusionAuth.Sdk.Models.HTTPHeaders>(global::FusionAuth.Sdk.Models.HTTPHeaders.CreateFromDiscriminatorValue); } },
                { "httpAuthenticationPassword", n => { HttpAuthenticationPassword = n.GetStringValue(); } },
                { "httpAuthenticationUsername", n => { HttpAuthenticationUsername = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "insertInstant", n => { InsertInstant = n.GetLongValue(); } },
                { "lastUpdateInstant", n => { LastUpdateInstant = n.GetLongValue(); } },
                { "readTimeout", n => { ReadTimeout = n.GetIntValue(); } },
                { "signatureConfiguration", n => { SignatureConfiguration = n.GetObjectValue<global::FusionAuth.Sdk.Models.WebhookSignatureConfiguration>(global::FusionAuth.Sdk.Models.WebhookSignatureConfiguration.CreateFromDiscriminatorValue); } },
                { "sslCertificate", n => { SslCertificate = n.GetStringValue(); } },
                { "sslCertificateKeyId", n => { SslCertificateKeyId = n.GetGuidValue(); } },
                { "tenantIds", n => { TenantIds = n.GetCollectionOfPrimitiveValues<Guid?>()?.AsList(); } },
                { "url", n => { Url = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("connectTimeout", ConnectTimeout);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Webhook_data>("data", Data);
            writer.WriteStringValue("description", Description);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.Webhook_eventsEnabled>("eventsEnabled", EventsEnabled);
            writer.WriteBoolValue("global", Global);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.HTTPHeaders>("headers", Headers);
            writer.WriteStringValue("httpAuthenticationPassword", HttpAuthenticationPassword);
            writer.WriteStringValue("httpAuthenticationUsername", HttpAuthenticationUsername);
            writer.WriteGuidValue("id", Id);
            writer.WriteLongValue("insertInstant", InsertInstant);
            writer.WriteLongValue("lastUpdateInstant", LastUpdateInstant);
            writer.WriteIntValue("readTimeout", ReadTimeout);
            writer.WriteObjectValue<global::FusionAuth.Sdk.Models.WebhookSignatureConfiguration>("signatureConfiguration", SignatureConfiguration);
            writer.WriteStringValue("sslCertificate", SslCertificate);
            writer.WriteGuidValue("sslCertificateKeyId", SslCertificateKeyId);
            writer.WriteCollectionOfPrimitiveValues<Guid?>("tenantIds", TenantIds);
            writer.WriteStringValue("url", Url);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
